{"version":3,"sources":["src/js/Elements/deck.js","src/js/Elements/players.js","src/js/index.js"],"names":["RANKS","STICKS","Card","r","s","rank","stick","Deck","b","deck","card","value","parseInt","i","length","j","push","setValue","generateDeck","shuffled","randomPosition","Math","floor","random","unshift","splice","Player","h","hand","gameDeck","someCard","pop","divContainer","innerHTML","pos","element","div","document","createElement","cardIsRed","textContent","appendChild","className","shuffle","player","crupier","pointsPlayer","pointsCrupier","containerCardsPlayer","querySelector","buttons","pedir","plantarse","firstRound","pickCard","renderCard","watchPunctuation","askPlayer","playerObj","points","playerPickCard","yesOrNot","answer","console","log","roundGame","disabledBtn","disabled","notExceed21","playerValue","whoIsTheWinner","mostrarPuntuaciones","table","colorGuion","getCard","passTurn","addEventListener"],"mappings":"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","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["// Clase del objeto deck y cards\n\nconst RANKS = ['A','2','3','4','5','6','7','8','9','10','J','Q','K']\nconst STICKS = ['♥','♠','♦','♣']\n\nexport class Card {\n    constructor(r = '', s = '') {\n      this.rank = r,\n      this.stick = s\n    }\n\n    getRank () {\n      return this.rank\n    }\n}\n\nexport class Deck {\n  constructor(b){\n    this.deck = b\n  }\n\n  setValue (card) {\n    let rank = card.rank\n    let  value = 0\n    \n    switch (rank) {\n      case 'A':\n        value = 11\n        break\n      case 'J':\n        value = 10\n        break\n      case 'Q':\n        value = 10\n        break\n      case 'K':\n        value = 10\n        break\n      default:\n        value = parseInt(rank)\n    }\n    return value\n  }\n\n  generateDeck () {\n    let deck = [];\n  \n    for (var i = 0; i < STICKS.length; i++) {\n      for (var j = 0; j < RANKS.length; j++) {\n        let card = new Card(RANKS[j]);\n        deck.push({ //Tengo que hacerlo así para poder leer luego los valores de 'rank', 'stick', y 'value' sin que me salga undefined\n          'rank': RANKS[j],\n          'stick': STICKS[i],\n          'value': this.setValue(card)\n        });\n      }\n    }  \n    return deck;\n  }\n\n  shuffle () {\n    let deck = this.generateDeck()\n    let shuffled = []\n    \n\n    while(deck.length > 0) {\n      let randomPosition = Math.floor(Math.random() * deck.length)\n      \n      shuffled.unshift(deck[randomPosition])\n      deck.splice(randomPosition, 1)\n    }\n    return shuffled\n  }\n}","import { Deck } from './deck.js';\n\nexport class Player {\n    constructor(h = []){\n    this.hand  = h\n    }\n\n    pickCard (gameDeck) {\n    let someCard = gameDeck.pop()\n\n    this.hand.push(someCard)\n    }\n\n    renderCard(divContainer){\n        divContainer.innerHTML = '' //Borra contenido\n        \n        for (let pos = 0; pos < this.hand.length; pos++){\n            let rank = this.hand[pos].rank,\n                stick = this.hand[pos].stick,\n                element = divContainer\n\n            //Construir carta en HTML\n            let div = document.createElement('div')\n            cardIsRed(stick, div)\n            div.textContent = `${rank}${stick}`\n            element.appendChild(div)\n        } \n    }\n}\n\nconst cardIsRed = (stick, div) => {\n    if (stick == '♥' || stick == '♦'){\n        div.className = `card cardRed`\n    } else {\n        div.className = `card`\n    }\n}","import { Deck } from './Elements/deck.js';\nimport { Player } from './Elements/players.js';\n\n\n\nlet deck = new Deck(),\ngameDeck = deck.shuffle()\n\nlet player = new Player(),\n    crupier = new Player()\n\nlet pointsPlayer, pointsCrupier\n\n\nconst containerCardsPlayer = document.querySelector('.cardsPlayer')\n\nconst buttons = {\n  pedir: document.querySelector('.pedir'),\n  plantarse: document.querySelector('.plantarse')\n}\n\n\n\n//Comienzo del juego\nconst firstRound = () => {\n\n  player.pickCard(gameDeck)\n  player.pickCard(gameDeck)\n\n  player.renderCard(containerCardsPlayer)\n\n  crupier.pickCard(gameDeck)\n\n  pointsPlayer = watchPunctuation(player)\n  if (pointsPlayer == 21){\n    askPlayer()\n  }\n}\n\n\n//Valorar puntuación\nconst watchPunctuation = (playerObj) => {\n  let points = 0\n\n  for (let i = 0; i < playerObj.hand.length; i++){\n    points = points + playerObj.hand[i].value\n  }\n  return points\n}\n\nconst playerPickCard = () => {\n  player.pickCard(gameDeck)\n  player.renderCard(containerCardsPlayer)\n  askPlayer()\n}\n\n//Preguntar al jugador si continuar o no\nconst askPlayer = (yesOrNot) => {\n  let answer = yesOrNot\n  \n  console.log(`Respuesta del jugador: %c ${answer}`, 'color:orange')\n\n  pointsPlayer = watchPunctuation(player)\n  roundGame()\n\n\n  if (pointsPlayer == 21) {\n    console.log(`%c JUGADOR se planta por tener 21 `, 'background:black; color:white')\n    disabledBtn()\n  } if (answer == false ) {\n    console.log(`%c JUGADOR se planta con ${pointsPlayer} `, 'background:violet; color:teal')\n    disabledBtn()\n  } \n}\n\nconst disabledBtn = () => {\n  buttons.pedir.disabled = true;\n  buttons.plantarse.disabled = true;\n}\n\nconst notExceed21 = (playerValue) => {\n  if (playerValue <= 21){\n    return true\n  } else {\n    console.log('%c  Pierde JUGADOR por tener:  ' + pointsPlayer, 'background:white; color: red; font-size: 12px')\n    disabledBtn()\n  }\n}\n\nconst whoIsTheWinner = (pointsPlayer, pointsCrupier) => {\n  if (pointsPlayer > pointsCrupier && notExceed21(pointsPlayer)){\n    console.log('%c  Gana JUGADOR con: '+ pointsPlayer, 'background:white; color: green; font-size: 12px')\n  }\n}\n\n// ######   FUNCION DE SEGUIMIENTO    ########\nconst mostrarPuntuaciones = () => {\n\n  console.log('Player')\n  console.table(player.hand)\n  console.log('Crupier')\n  console.table(crupier.hand)\n  \n  console.log(`Tamaño de la baraja: ${gameDeck.length}`)\n  \n  // Mostrar puntuación de las cartas\n  pointsPlayer = watchPunctuation(player)\n  pointsCrupier = watchPunctuation(crupier)\n  console.log (`Puntuacion del jugador: ${pointsPlayer}`)\n  console.log (`Puntuacion del crupier: ${pointsCrupier}`)\n\n}// ######  -FIN- FUNCION DE SEGUIMIENTO    ########\n\n\nconst roundGame = () => {\n  \n  let colorGuion = 'color: orange; font-size: 14px'\n\n  console.log(`%c---------   SIGUIENTE RONDA   ---------`, colorGuion)\n  \n  //console.log('Player')\n  console.table(player.hand)\n  \n  whoIsTheWinner(pointsPlayer, pointsCrupier)\n  \n}\n\n\nfirstRound()\n\n//test despues de preguntar\nmostrarPuntuaciones()\n\nconst getCard = () => playerPickCard()\nconst passTurn = () => askPlayer(false)\n\nbuttons.pedir.addEventListener('click',getCard)\nbuttons.plantarse.addEventListener('click', passTurn)\n\n\n\n"]}