{"version":3,"sources":["js/Elements/deck.js","js/Elements/players.js","js/index.js"],"names":["RANKS","STICKS","Card","r","s","rank","stick","Deck","b","deck","card","value","parseInt","i","length","j","push","setValue","generateDeck","shuffled","randomPosition","Math","floor","random","unshift","splice","Player","h","hand","gameDeck","someCard","pop","divContainer","innerHTML","pos","element","div","document","createElement","cardIsRed","textContent","appendChild","className","shuffle","player","crupier","pointsPlayer","pointsCrupier","containerCardsPlayer","querySelector","buttons","pedir","plantarse","firstRound","pickCard","renderCard","watchPunctuation","askPlayer","refreshScore","playerObj","points","playerPickCard","yesOrNot","answer","whoIsTheWinner","console","log","disabledBtn","disabled","notExceed21","playerValue","winPlayer","equalScore","crupierRound","roundGame","mostrarPuntuaciones","table","colorGuion","getCard","passTurn","addEventListener"],"mappings":";;AEAA;;AACA;;AAIA,IAAIS,IAAI,GAAG,IAAIF,UAAJ,EAAX;ADLA,ACKA,IACAsB,QAAQ,GAAGpB,IAAI,CAACkC,OAAL,EADX;AAGA,IAAIC,MAAM,GAAG,IAAIlB,eAAJ,EAAb;AAAA,IACImB,OAAO,GAAG,IAAInB,eAAJ,EADd;AAGA,IAAIoB,YAAJ,EAAkBC,aAAlB;AAGA,IAAMC,oBAAoB,GAAGX,QAAQ,CAACY,aAAT,CAAuB,cAAvB,CAA7B;AAEA,IAAMC,OAAO,GAAG;AFhBhB,AEiBEC,EAAAA,KAAK,EAAEd,QAAQ,CAACY,aAAT,CAAuB,QAAvB,CADO;AFdhB,AEgBEG,EAAAA,EFhBIpD,KAAK,EEgBA,CFhBG,CAAC,AEgBFqC,GFhBC,EAAK,GAAL,AEgBO,CAACY,CFhBC,GAAT,EAAa,GAAb,EAAiB,EEgBlB,CFhBC,AEgBsB,EFhBD,GAArB,EAAyB,GAAzB,EAA6B,AEgB9B,GFhBC,EAAiC,GAAjC,EAAqC,IAArC,EAA0C,GAA1C,EAA8C,GAA9C,EAAkD,GAAlD,CAAd;AACA,AEagB,CAAhB,EAOA,CFpBMhD,ACDOyB,MDCD,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAf;;AEqBA,IFnBaxB,AEmBPmD,UAAU,GAAG,SAAbA,UAAa,GAAM;ADrBrB,ACuBFT,EAAAA,MAAM,CAACU,QAAP,CAAgBzB,EDvBK,MCuBrB;ADvBqB,ACwBrBe,EAAAA,MDxBcjB,ACwBR,CDxBe,ACwBd2B,QAAP,CAAgBzB,QAAhB,sDDxBkB,EAAG;ADGnB,AEuBFe,EAAAA,MAAM,CAACW,SFvBuB,CEuB9B,CAAkBP,oBAAlB;AFvB8B,ACHT,AC4BrBH,EAAAA,MFzBc1C,CAAgB,AEyBvB,CAACmD,QAAR,CAAiBzB,QAAjB,qDFzBkB,EAAY;AAAA,AE2B9BiB,EAAAA,MF3BsB1C,CAAQ,KE2BlB,GAAGoD,gBAAgB,CAACZ,MAAD,CAA/B,uCF3B0B,EAAI;ACF5B,SAAKhB,IAAL,GAAaD,CAAb;ADE4B,ACD3B,AC6BH,MAAImB,YAAY,IAAI,EAApB,EAAuB;AACrBW,IAAAA,SAAS;AF5BP,AE6BH,SF7BQpD,IAAL,GAAYF,CAAZ,EACA,KAAKG,KAAL,GAAaF,CADb;AAED,AE4BJ,CAbD;6BDjBcyB,UAAU;AACpB,AC+BJ,IAAM6B,MD/BE5B,MC+BU,ED/BF,CC+BK,ED/BFD,OC+Bb6B,CD/BqB,CAAC3B,GAAT,EAAf,KC+BiB,CAACa,MAAD,EAASC,OAAT,EAAqB;AD7BtC,AC8BFC,EAAAA,SD9BOlB,GC8BK,CD9BV,CAAUZ,CC8BGwC,GD9Bb,CAAe1B,QAAf,IC8B6B,CAACc,MAAD,CAA/B;AD7BG,AC8BHG,EAAAA,aAAa,GAAGS,YF9BH,IE8BmB,CAACX,OAAD,CAAhC;AF7BI,AE8BL,CAHD,EAKA,UFhCa,KAAKxC,IAAZ;AACD;+BCAU2B,cAAa;AACpBA,AC+BR,IAAMwB,ED/BExB,YAAY,CAACC,CC+BC,GAAG,KD/BjB,GAAyB,CC+B3BuB,CD/BE,CADoB,CACQ,aC+BX,CAACG,SAAD,EAAe;AACtC,MAAIC,MAAM,GAAG,CAAb;AD9BM,WAAK,IAAI1B,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKN,IAAL,CAAUd,MAAlC,EAA0CoB,GAAG,EAA7C,EAAgD;AAC5C,AC+BV,OAAK,IAAIrB,CD/BKR,AC+BJ,GAAG,CD/BK,AC+BlB,EAAgBQ,CD/BK,AC+BJ,GAAG8C,ED/BM/B,IAAL,CAAUM,EC+BF,CD/BR,AC+BSN,ED/BMvB,EC+BhB,CAAeS,CD/BzB,KC+BV,EAA2CD,CAAC,EAA5C,EAA+C;AD/BrC,ACgCR+C,IAAAA,MAAM,ED/BMtD,CC+BHsD,ID/BQ,EC+BF,CD/BK,EC+BFD,GD/BO/B,IAAL,CAAUM,CC+BH,CAACN,CD/BR,EAAetB,CC+BjB,CAAeO,CAAf,EDhCV,ACgC4BF,KAApC;ADhCQ,ACiCT,YD/BawB,OAAO,GAAGH,YAFd,CAD4C,CAK5C;IDLCzB;ACMD,AC6BV,SAAOqD,GD7BOxB,GAAG,AC6BjB,GD7BoBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAC,AC6BX,CAPD,ODtBYA,SAAS,CAACjC,KAAD,EAAQ8B,GAAR,CAAT;ADNV,ACOUA,QAAAA,GAAG,CAACI,IDPFhC,CAAZ,EAAc,ICOJ,aAAqBH,IAArB,SAA4BC,KAA5B;ADPI,ACQJ6B,AC6BZ,IAAM0B,ID7BM1B,OAAO,CAACM,EC6BA,GAAG,MD7BX,CAAoBL,EC6B1ByB,CD7BM,aC6BW,GAAM;AD5BpB,AC6BPjB,EAAAA,MAAM,CAACU,QAAP,CAAgBzB,QAAhB;AFrCE,ACSC,AC6BHe,EAAAA,MAAM,CFtCCnC,AEsCA8C,IFtCL,GAAY/C,CAAZ,EEsCF,CAAkBwC,oBAAlB;AFrCC,AEsCDS,EAAAA,SAAS;AACV,CAJD,EAMA;;;AACA,IAAMA,SAAS,GAAG,SAAZA,IFxCM/C,KEwCM,CFxCA,AEwCCoD,QAAD,EAAc;AFvC5B,AEwCF,MAAIC,IFxCE1D,EEwCI,EFxCA,CEwCGyD,EFxCApD,IAAI,CAACL,CEwClB,GFxCE;AACA,AEyCFyC,EAAAA,QFzCOnC,IEyCK,CFzCA,EEyCG6C,CFzCA,CAAb,cEyC6B,CAACZ,MAAD,CAA/B;ADlCF,ACmCEoB,EAAAA,EDnCIzB,SAAS,GAAG,ACmCF,CAACO,QDnCXP,ICmCU,EAAeQ,GDnCb,CAACzC,KAAD,EAAQ8B,ECmCV,CDnCE,ACmChB,EDnCgC;ADL9B,ACMA,MAAI9B,KAAK,GDNDD,CCMK,GDNb,ACMI,IAAgBC,KAAK,IAAI,GAA7B,EAAiC;ADL/B,ACME8B,ACmCN,IDnCMA,ECmCFU,CDnCK,CAACJ,KDND,GAAL,CCME,CCmCU,IAAI,EAApB,EAAwB;AFxClB/B,ACMH,ACmCDsD,GDrCA,CCqCAA,KDnCO,CDNHtD,CEyCG,CAACuD,GFzCC,AEyCT,GFzCY,EAAR,kCEyC8C,+BAAlD;AFxCI,ACMA9B,ACmCJ+B,IDnCI/B,ACmCJ+B,GDnCO,CAACzB,OCmCG,EDnCP;AACH,ACmCF;AFzCG,ACOL,CAND,YDDW,GAAL;AACE/B,AEwCJ,MAAIoD,IFxCApD,EEwCM,GFxCD,CEwCK,EFxCF,EAAR,CEwCJ,EAAsB;AFvClB,AEwCJsD,IAAAA,OAAO,CAACC,GAAR,oCAAwCpB,YAAxC,QAAyD,+BAAzD;AACAqB,IAAAA,WAAW;AFxCT,AEyCH,aFzCQ,GAAL;AACEx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","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["// Clase del objeto deck y cards\n\nconst RANKS = ['A','2','3','4','5','6','7','8','9','10','J','Q','K']\nconst STICKS = ['♥','♠','♦','♣']\n\nexport class Card {\n    constructor(r = '', s = '') {\n      this.rank = r,\n      this.stick = s\n    }\n\n    getRank () {\n      return this.rank\n    }\n}\n\nexport class Deck {\n  constructor(b){\n    this.deck = b\n  }\n\n  setValue (card) {\n    let rank = card.rank\n    let  value = 0\n    \n    switch (rank) {\n      case 'A':\n        value = 11\n        break\n      case 'J':\n        value = 10\n        break\n      case 'Q':\n        value = 10\n        break\n      case 'K':\n        value = 10\n        break\n      default:\n        value = parseInt(rank)\n    }\n    return value\n  }\n\n  generateDeck () {\n    let deck = [];\n  \n    for (var i = 0; i < STICKS.length; i++) {\n      for (var j = 0; j < RANKS.length; j++) {\n        let card = new Card(RANKS[j]);\n        deck.push({ //Tengo que hacerlo así para poder leer luego los valores de 'rank', 'stick', y 'value' sin que me salga undefined\n          'rank': RANKS[j],\n          'stick': STICKS[i],\n          'value': this.setValue(card)\n        });\n      }\n    }  \n    return deck;\n  }\n\n  shuffle () {\n    let deck = this.generateDeck()\n    let shuffled = []\n    \n\n    while(deck.length > 0) {\n      let randomPosition = Math.floor(Math.random() * deck.length)\n      \n      shuffled.unshift(deck[randomPosition])\n      deck.splice(randomPosition, 1)\n    }\n    return shuffled\n  }\n}","import { Deck } from './deck.js';\n\nexport class Player {\n    constructor(h = []){\n    this.hand  = h\n    }\n\n    pickCard (gameDeck) {\n    let someCard = gameDeck.pop()\n\n    this.hand.push(someCard)\n    }\n\n    renderCard(divContainer){\n        divContainer.innerHTML = '' //Borra contenido\n        \n        for (let pos = 0; pos < this.hand.length; pos++){\n            let rank = this.hand[pos].rank,\n                stick = this.hand[pos].stick,\n                element = divContainer\n\n            //Construir carta en HTML\n            let div = document.createElement('div')\n            cardIsRed(stick, div)\n            div.textContent = `${rank}${stick}`\n            element.appendChild(div)\n        } \n    }\n}\n\nconst cardIsRed = (stick, div) => {\n    if (stick == '♥' || stick == '♦'){\n        div.className = `card cardRed`\n    } else {\n        div.className = `card`\n    }\n}","import { Deck } from './Elements/deck.js';\nimport { Player } from './Elements/players.js';\n\n\n\nlet deck = new Deck(),\ngameDeck = deck.shuffle()\n\nlet player = new Player(),\n    crupier = new Player()\n\nlet pointsPlayer, pointsCrupier\n\n\nconst containerCardsPlayer = document.querySelector('.cardsPlayer')\n\nconst buttons = {\n  pedir: document.querySelector('.pedir'),\n  plantarse: document.querySelector('.plantarse')\n}\n\n\n\n//Comienzo del juego\nconst firstRound = () => {\n\n  player.pickCard(gameDeck)\n  player.pickCard(gameDeck)\n\n  player.renderCard(containerCardsPlayer)\n\n  crupier.pickCard(gameDeck)\n\n  pointsPlayer = watchPunctuation(player)\n  if (pointsPlayer == 21){\n    askPlayer()\n  }\n}\n\nconst refreshScore = (player, crupier) => {\n  pointsPlayer = watchPunctuation(player)\n  pointsCrupier = watchPunctuation(crupier)\n}\n\n//Valorar puntuación\nconst watchPunctuation = (playerObj) => {\n  let points = 0\n\n  for (let i = 0; i < playerObj.hand.length; i++){\n    points = points + playerObj.hand[i].value\n  }\n  return points\n}\n\nconst playerPickCard = () => {\n  player.pickCard(gameDeck)\n  player.renderCard(containerCardsPlayer)\n  askPlayer()\n}\n\n//Preguntar al jugador si continuar o no\nconst askPlayer = (yesOrNot) => {\n  let answer = yesOrNot\n  \n  pointsPlayer = watchPunctuation(player)\n  whoIsTheWinner(pointsPlayer, pointsCrupier)\n\n  if (pointsPlayer == 21) {\n    console.log(`%c JUGADOR se planta por tener 21 `, 'background:black; color:white')\n    disabledBtn()\n  } if (answer == false ) {\n    console.log(`%c JUGADOR se planta con ${pointsPlayer} `, 'background:violet; color:teal')\n    disabledBtn()\n  } \n}\n\nconst disabledBtn = () => {\n  buttons.pedir.disabled = true;\n  buttons.plantarse.disabled = true;\n}\n\nconst notExceed21 = (playerValue) => {\n  if (playerValue <= 21){\n    return true\n  } else {\n    console.log('%c  Pierde JUGADOR por tener:  ' + pointsPlayer, 'background:white; color: red; font-size: 12px')\n    disabledBtn()\n  }\n}\n\nconst winPlayer = (pointsPlayer, pointsCrupier) => {\n  if (pointsPlayer > pointsCrupier && notExceed21(pointsPlayer)){\n    console.log('%c  Gana JUGADOR con: '+ pointsPlayer, 'background:white; color: green; font-size: 12px')\n  } else {\n    console.log ('paaaaasaaaando del jugador')\n  }\n}\n\nconst equalScore = (pointsPlayer, pointsCrupier) => {\n  if (pointsPlayer === pointsCrupier && notExceed21(pointsPlayer)){\n    console.log('%c  EMPATE con: '+ pointsPlayer, 'background:white; color: orange; font-size: 14px')\n  } else {\n    console.log ('paaaaasaaaando del igualdades')\n  }\n}\n\nconst whoIsTheWinner = (pointsPlayer, pointsCrupier) => {\n  notExceed21(pointsPlayer)\n  if (pointsPlayer === pointsCrupier){\n    console.log('%c  EMPATE con: '+ pointsPlayer, 'background:white; color: orange; font-size: 14px')\n    disabledBtn()\n  } else {\n    if (pointsPlayer > pointsCrupier){\n      console.log('%c  Gana JUGADOR con: '+ pointsPlayer, 'background:white; color: green; font-size: 12px')\n    } else {\n      console.log('%c  Gana CRUPIER con: '+ pointsPlayer, 'background:white; color: red; font-size: 12px')\n    }\n  }\n}\n\n// IA del crupier\n// - Despues de que el jugador se plane comienza su turno\n// - Si tienes menos de 16 sigue pidiendo, y con 17 se planta\n\nconst crupierRound = () => {\n  while (pointsCrupier <= 17){\n    refreshScore(player, crupier)\n    crupier.pickCard(gameDeck)\n    roundGame()\n  }\n}\n\n\n\n// ######   FUNCION DE SEGUIMIENTO    ########\nconst mostrarPuntuaciones = () => {\n\n  console.log('Player')\n  console.table(player.hand)\n  console.log('Crupier')\n  console.table(crupier.hand)\n  \n  console.log(`Tamaño de la baraja: ${gameDeck.length}`)\n  \n  // Mostrar puntuación de las cartas\n  console.log (`Puntuacion del jugador: ${pointsPlayer}`)\n  console.log (`Puntuacion del crupier: ${pointsCrupier}`)\n\n}// ######  -FIN- FUNCION DE SEGUIMIENTO    ########\n\n\nconst roundGame = () => {\n  \n  let colorGuion = 'color: orange; font-size: 14px'\n\n  console.log(`%c---------   SIGUIENTE RONDA   ---------`, colorGuion)\n  \n  console.log(`%c PLAYER `, 'color: red; font-size: 10px')\n  console.table(player.hand)\n  console.log(`%c CRUPIER `, 'color: violet; font-size: 10px')\n  console.table(crupier.hand)\n  \n  whoIsTheWinner(pointsPlayer, pointsCrupier)\n  \n}\n\n\nfirstRound()\n\nrefreshScore(player, crupier)\n\n\n//test despues de preguntar\n\n//mostrarPuntuaciones()\n\nconst getCard = () => playerPickCard()\nconst passTurn = () => askPlayer(false)\n\nbuttons.pedir.addEventListener('click',getCard)\nbuttons.plantarse.addEventListener('click', passTurn)\nbuttons.plantarse.addEventListener('click', crupierRound)\n\n//crupierRound()\n\n\n\n"]}