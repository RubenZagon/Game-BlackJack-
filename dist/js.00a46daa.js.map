{"version":3,"sources":["js/Elements/deck.js","js/Elements/players.js","js/index.js"],"names":["RANKS","STICKS","Card","r","s","rank","stick","Deck","b","deck","card","value","parseInt","i","length","j","push","setValue","generateDeck","shuffled","randomPosition","Math","floor","random","unshift","splice","Player","h","hand","gameDeck","someCard","pop","divContainer","innerHTML","pos","element","div","document","createElement","cardIsRed","textContent","appendChild","className","shuffle","player","crupier","pointsPlayer","pointsCrupier","CONTAINER","CardsPlayer","querySelector","CardsCrupier","BUTTONS","pedir","plantarse","restart","divBotonera","SCORE","WINNER","firstRound","pickCard","renderCard","refreshScore","printScore","askPlayer","watchPunctuation","playerObj","points","playerPickCard","yesOrNot","answer","whoIsTheWinner","disabledBtn","reload","window","location","disabled","classList","add","remove","addEventListener","printInHTMLTheWinner","notExceed21","playerValue","pPlayer","pCrupier","crupierRound","getCard","passTurn"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["// Clase del objeto deck y cards\n\nconst RANKS = ['A','2','3','4','5','6','7','8','9','10','J','Q','K']\nconst STICKS = ['♥','♠','♦','♣']\n\nexport class Card {\n    constructor(r = '', s = '') {\n      this.rank = r,\n      this.stick = s\n    }\n\n    getRank () {\n      return this.rank\n    }\n}\n\nexport class Deck {\n  constructor(b){\n    this.deck = b\n  }\n\n  setValue (card) {\n    let rank = card.rank\n    let  value = 0\n    \n    switch (rank) {\n      case 'A':\n        value = 11\n        break\n      case 'J':\n        value = 10\n        break\n      case 'Q':\n        value = 10\n        break\n      case 'K':\n        value = 10\n        break\n      default:\n        value = parseInt(rank)\n    }\n    return value\n  }\n\n  generateDeck () {\n    let deck = [];\n  \n    for (var i = 0; i < STICKS.length; i++) {\n      for (var j = 0; j < RANKS.length; j++) {\n        let card = new Card(RANKS[j]);\n        deck.push({ //Tengo que hacerlo así para poder leer luego los valores de 'rank', 'stick', y 'value' sin que me salga undefined\n          'rank': RANKS[j],\n          'stick': STICKS[i],\n          'value': this.setValue(card)\n        });\n      }\n    }  \n    return deck;\n  }\n\n  shuffle () {\n    let deck = this.generateDeck()\n    let shuffled = []\n    \n\n    while(deck.length > 0) {\n      let randomPosition = Math.floor(Math.random() * deck.length)\n      \n      shuffled.unshift(deck[randomPosition])\n      deck.splice(randomPosition, 1)\n    }\n    return shuffled\n  }\n}","import { Deck } from './deck.js';\n\nexport class Player {\n    constructor(h = []){\n    this.hand  = h\n    }\n\n    pickCard (gameDeck) {\n    let someCard = gameDeck.pop()\n\n    this.hand.push(someCard)\n    }\n\n    renderCard(divContainer){\n        divContainer.innerHTML = '' //Borra contenido\n        \n        for (let pos = 0; pos < this.hand.length; pos++){\n            let rank = this.hand[pos].rank,\n                stick = this.hand[pos].stick,\n                element = divContainer\n\n            //Construir carta en HTML\n            let div = document.createElement('div')\n            cardIsRed(stick, div)\n            div.textContent = `${rank}${stick}`\n            element.appendChild(div)\n        } \n    }\n}\n\nconst cardIsRed = (stick, div) => {\n    if (stick == '♥' || stick == '♦'){\n        div.className = `card cardRed`\n    } else {\n        div.className = `card`\n    }\n}","import { Deck } from './Elements/deck.js';\nimport { Player } from './Elements/players.js';\n\n\n// ########    VARIABLES GLOBALES   ##############\nlet deck = new Deck(),\ngameDeck = deck.shuffle()\n\nlet player = new Player(),\n    crupier = new Player()\n\nlet pointsPlayer, pointsCrupier\n\n\n// ########    SELECTORES HTML   ##############\nconst CONTAINER = {\n  CardsPlayer: document.querySelector('.cardsPlayer'),\n  CardsCrupier: document.querySelector('.cardsCrupier')\n}\n\nconst BUTTONS = {\n  pedir: document.querySelector('.pedir'),\n  plantarse: document.querySelector('.plantarse'),\n  restart: document.querySelector('.restart'),\n  divBotonera: document.querySelector('.botonera')\n}\n\nconst SCORE = {\n  player: document.querySelector('.pointsPlayer'),\n  crupier: document.querySelector('.pointsCrupier')\n}\n\nconst WINNER = document.querySelector('.winner')\n\n// ########    FUNCIONES   ##############\nconst firstRound = () => {\n\n  player.pickCard(gameDeck)\n  player.pickCard(gameDeck)\n  player.renderCard(CONTAINER.CardsPlayer)\n\n  crupier.pickCard(gameDeck)\n  crupier.renderCard(CONTAINER.CardsCrupier)\n\n  refreshScore(player, crupier)\n  printScore()\n  if (pointsPlayer == 21){\n    askPlayer()\n  }\n}\n\nconst printScore = () => {\n  SCORE.crupier.textContent = pointsCrupier\n  SCORE.player.textContent = pointsPlayer\n}\n\nconst refreshScore = (player, crupier) => {\n  pointsPlayer = watchPunctuation(player)\n  pointsCrupier = watchPunctuation(crupier)\n}\n\n//Valorar puntuación\nconst watchPunctuation = (playerObj) => {\n  let points = 0\n\n  for (let i = 0; i < playerObj.hand.length; i++){\n    points = points + playerObj.hand[i].value\n  }\n  return points\n}\n\nconst playerPickCard = () => {\n  player.pickCard(gameDeck)\n  player.renderCard(CONTAINER.CardsPlayer)\n  askPlayer()\n}\n\n//Preguntar al jugador si continuar o no\nconst askPlayer = (yesOrNot) => {\n  let answer = yesOrNot\n  \n  pointsPlayer = watchPunctuation(player)\n  whoIsTheWinner(pointsPlayer, pointsCrupier)\n\n  if (pointsPlayer == 21) {\n    disabledBtn()\n  } if (answer == false ) {\n    disabledBtn()\n  } \n}\n\nconst reload = () => {\n  window.location.reload(false)\n}\n\nconst disabledBtn = () => {\n  BUTTONS.pedir.disabled = true;\n  BUTTONS.plantarse.disabled = true;\n  BUTTONS.pedir.classList.add('hidden')\n  BUTTONS.plantarse.classList.add('hidden')\n  BUTTONS.restart.classList.remove('hidden')\n  BUTTONS.restart.addEventListener('click',reload)\n  printInHTMLTheWinner(pointsPlayer, pointsCrupier)\n}\n\nconst notExceed21 = (playerValue) => {\n  if (playerValue <= 21){\n    return true\n  } else {\n    disabledBtn()\n  }\n}\n\nconst whoIsTheWinner = (pointsPlayer, pointsCrupier) => {\n  printScore()\n  notExceed21(pointsPlayer)\n  if (pointsPlayer == 21 ) {\n    disabledBtn()\n  } else if (pointsPlayer === pointsCrupier){\n    disabledBtn()\n  } else if (pointsPlayer > 21){\n    disabledBtn()\n  } else if (pointsPlayer > pointsCrupier) {\n    disabledBtn()\n  } else {\n    disabledBtn()\n    }\n}\n\nconst printInHTMLTheWinner = (pointsPlayer, pointsCrupier) => {\n\n  let pPlayer = pointsPlayer,\n      pCrupier = pointsCrupier\n//¿Quien es el ganador?\nif (pPlayer == 21 ) {\n  WINNER.textContent ='BLACKJACK'\n} else if (pPlayer === pCrupier){\n  WINNER.textContent ='EMPATE'\n} else if (pPlayer > 21){\n  WINNER.textContent ='Gana CRUPIER'\n} else if (pPlayer > pCrupier) {\n  WINNER.textContent ='Gana JUGADOR'\n} else {\n  WINNER.textContent ='Gana CRUPIER'\n  }\n\n// Imprime jugador en pantalla\n  WINNER.classList.remove('hidden')\n}\n\nconst crupierRound = () => {\n\n// IA del crupier\n// - Despues de que el jugador se plane comienza su turno\n// - Si tienes menos de 16 sigue pidiendo, y con 17 se planta\n\n    for (let i = 0; pointsCrupier < 15; i++){\n      refreshScore(player, crupier)\n      if (pointsCrupier < 16 ){\n      crupier.pickCard(gameDeck)\n      crupier.renderCard(CONTAINER.CardsCrupier)\n      printScore()\n      }\n      whoIsTheWinner(pointsPlayer, pointsCrupier)\n    }\n}\n\nfirstRound()\n\nconst getCard = () => playerPickCard()\nconst passTurn = () => askPlayer(false)\n\nBUTTONS.pedir.addEventListener('click',getCard)\nBUTTONS.plantarse.addEventListener('click', passTurn)\nBUTTONS.plantarse.addEventListener('click', crupierRound)"]}